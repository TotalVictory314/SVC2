{
	"compiler": {
		"version": "0.8.0+commit.c7dfd78e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_symbol",
						"type": "string"
					},
					{
						"internalType": "uint8",
						"name": "_decimals",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "_initialSupply",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Standard ERC20 token implementation.",
			"kind": "dev",
			"methods": {
				"allowance(address,address)": {
					"details": "Returns the amount of tokens that an owner has allowed a spender to spend.",
					"params": {
						"owner": "The address that owns the tokens.",
						"spender": "The address that is allowed to spend the tokens."
					},
					"returns": {
						"_0": "The amount of tokens allowed to be spent."
					}
				},
				"approve(address,uint256)": {
					"details": "Approves the specified address to spend the specified amount of tokens on behalf of the message sender.",
					"params": {
						"spender": "The address to approve for spending the tokens.",
						"value": "The amount of tokens to be spent."
					},
					"returns": {
						"_0": "True if the approval was successful, revert otherwise."
					}
				},
				"balanceOf(address)": {
					"details": "Returns the balance of the specified address.",
					"params": {
						"account": "The address to query the balance of."
					},
					"returns": {
						"_0": "The balance of the specified address."
					}
				},
				"constructor": {
					"details": "Constructor to initialize the ERC20 token.",
					"params": {
						"_decimals": "The number of decimal places.",
						"_initialSupply": "The initial token supply.",
						"_name": "The name of the token.",
						"_symbol": "The symbol of the token."
					}
				},
				"transfer(address,uint256)": {
					"details": "Transfers tokens from the sender to the specified recipient.",
					"params": {
						"to": "The address to transfer tokens to.",
						"value": "The amount of tokens to transfer."
					},
					"returns": {
						"_0": "True if the transfer was successful, revert otherwise."
					}
				},
				"transferFrom(address,address,uint256)": {
					"details": "Transfers tokens from one address to another.",
					"params": {
						"from": "The address to transfer tokens from.",
						"to": "The address to transfer tokens to.",
						"value": "The amount of tokens to transfer."
					},
					"returns": {
						"_0": "True if the transfer was successful, revert otherwise."
					}
				}
			},
			"title": "ERC20Token",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Upgrade Attempt/ERC20Token.sol": "ERC20Token"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Upgrade Attempt/ERC20Token.sol": {
			"keccak256": "0x9d7a455068531183e860826afd975675e2b53da5238fc23bb741eeecac6d996a",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://9ede2acbe91083f998263560d63dc9ae6f3ff283290049615fd3eab8622aeef2",
				"dweb:/ipfs/QmSv2EDrJ8cdiAfsc6xmq6jXhkpx25E8ETiN6cdi6n2vv9"
			]
		}
	},
	"version": 1
}